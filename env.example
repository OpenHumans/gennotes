# We use environment variables to define deployment specific settings and
# secret keys (which should never be stored in git).
#
# In addition to setting environment variables for your system, you may
# instead define them in a file named ".env". (This can be easier for some
# setups, e.g. local development.)
#
# This is an example file. To set up a local version, copy this file to
# ".env" (note the leading period!) and add the appropriate settings.

######################################################################
# Required settings
######################################################################

# A long, random string used for cryptographic functions within Django
# SECRET_KEY="abcdefghijABCDEFGHIJ0123456789!@#$%^&*()"
SECRET_KEY=""

# The PostgreSQL database URL.
# e.g. for local dev with a database 'mydb', user 'jdoe', password 'pa55wd':
DATABASE_URL="postgres://jdoe:pa55wd@localhost/mydb"

######################################################################
# Other settings
######################################################################

# You probably want DEBUG on when doing local development.
# This also turns off django-sslify; runserver doesn't provide SSL.
DEBUG="True"

# Email backend. For local development you can use console backend by
# setting EMAIL_BACKEND to 'django.core.mail.backends.console.EmailBackend'
# and leave the other settings unspecified.
# EMAIL_BACKEND = ''
# EMAIL_USE_TLS = ''
# EMAIL_HOST = ''
# EMAIL_HOST_USER = ''
# EMAIL_HOST_PASSWORD = ''
# EMAIL_PORT = ''

# If you can grant superuser priveleges to your PostgreSQL database user,
# the following is not needed.
# But if you aren't able to grant superuser privileges, you'll have to
# add the hstore field by running the PostgreSQL command on your database:
# `CREATE EXTENSION IF NOT EXISTS "hstore";`. Then set PSQL_USER_IS_SUPERUSER
# to "False" to skip attempted automatic creation of the field.
# PSQL_USER_IS_SUPERUSER="False"
